
# latency for flow verification


import matplotlib.pyplot as plt 
import numpy as np 
  



x1 = [10,100,200,300,400,500,600,700,800,900,1000,1100,1200,1300,1400,1500,1600,1700,1800,1900,2000,2100,2200,2300,2400,2500,2600,2700,2800,2900,3000]

Proposed_Time = [0.33057284355163574,6.685338020324707,12.118173122406006,16.446873426437378,21.312949180603027,25.65385603904724,30.13130211830139,36.12592601776123,39.729872941970825,44.97289490699768,48.69605731964111,51.472676277160645,54.12056803703308,56.87016248703003,61.28759789466858,63.92550086975098,67.17405247688293,71.16441464424133,74.12435626983643,76.95195627212524,81.31648683547974,84.29429864883423,86.81038212776184,89.55999159812927,94.97894191741943,97.40206146240234,100.22956347465515,103.11489820480347,105.79509353637695,109.56446623802185,112.42713379859924]
#FRChain_Time =  [2.3305728435516357,9.685338020324707,16.118173122406006,21.446873426437378,27.312949180603027,32.65385603904724,38.13130211830139,45.12592601776123,49.729872941970825,55.97289490699768,60.69605731964111,64.47267627716064,68.12056803703308,71.87016248703003,77.28759789466858,80.92550086975098,85.17405247688293,90.16441464424133,94.12435626983643,97.95195627212524,103.31648683547974,107.29429864883423,110.81038212776184,114.55999159812927,120.97894191741943,124.40206146240234,128.22956347465515,132.11489820480347,135.79509353637695,140.56446623802185,146.23653975]
FRChain_Time = [3.3305728435516357,10.685338020324707,17.118173122406006,22.446873426437378,28.312949180603027,33.65385603904724,39.13130211830139,46.12592601776123,50.729872941970825,56.97289490699768,61.69605731964111,65.47267627716064,69.12056803703308,72.87016248703003,78.28759789466858,81.92550086975098,86.17405247688293,91.16441464424133,95.12435626983643,98.95195627212524,104.31648683547974,108.29429864883423,111.81038212776184,115.55999159812927,121.97894191741943,125.40206146240234,129.22956347465515,133.11489820480347,136.79509353637695,141.56446623802185,145.42713379859924]
BlockFlow_Time = [0.6086027984619141,7.563218223571778,16.479685953140237,24.55421017456049,32.817573818206725,42.504668952941984,49.793547256469964,56.78641102981607,64.01789492034968,71.7440491065983,78.7777245502475,87.55713695907616,95.04301803970345,101.94734792137142,110.90531333541858,119.76481998825052,127.00055970382664,135.59278302192646,143.83524026489215,154.03861477661073,163.53607929038935,171.06761401748585,180.61041786384493,188.14786708831687,196.60018020820505,206.68418181609974,214.34446447372292,225.34675413703772,235.06365764999234,243.0816361312849,254.2178963145]
BlockSDSec_Time = [1.0434656143188477,7.182542324066162,13.71376347541809,20.855370044708252,25.91687846183777,31.444061279296875,37.400830030441284,47.22882890701294,58.72703528404236,67.35110282897949,75.9372947216034,83.82002973556519,90.80148196220398,98.88337540626526,105.72600650787354,112.42330813407898,118.20959568023682,123.55761504173279,129.26635313034058,136.10593223571777,140.81882739067078,146.09601354599,151.56944036483765,158.5615804195404,165.24464988708496,173.34993267059326,185.18556022644043,192.67972683906555,201.22037076950073,208.58170294761658,218.24886536598206]

#ax = plt.subplot(111)
#fig, (ax1, ax2) = plt.subplots(2)

plt.figure(figsize=(8,5))
#plt.title("Verification Time Comparison")

# plot lines
'''
plt.plot(x1, Proposed_Time, '-*r', label = "SDBlock-IoT") 
plt.plot(x1, BlockFlow_Time, '-4b',label = "BlockFlow")
plt.plot(x1, BlockSDSec_Time, '-xg',label = "BlockSDSec")
plt.plot(x1, FRChain_Time, '->y',label = "FRChain")
'''
plt.plot(x1, Proposed_Time, '-or', label = "SDBlock-IoT") 
plt.plot(x1, BlockFlow_Time, '-ob',label = "BlockFlow")
plt.plot(x1, BlockSDSec_Time, '-og',label = "BlockSDSec")
plt.plot(x1, FRChain_Time, '-oy',label = "FRChain")


plt.xlabel('No. of Flows', fontsize=15)
plt.ylabel('Verification Time (ms)', fontsize=15)

#plt.legend(bbox_to_anchor=(1.05, 1.0), loc='upper left')
#plt.legend(["Proposed", "BlockFlow"], loc ="lower right")

plt.legend(["SDBlock-IoT", "BlockFlow","BlockSDSec","FRChain"], loc ="upper left")
plt.tight_layout()

#plt.legend()
plt.grid(axis = 'y')

plt.show()






